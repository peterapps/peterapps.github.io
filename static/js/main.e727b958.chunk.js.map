{"version":3,"sources":["components/NavBar.js","pages/Home.js","pages/NotFound.js","pages/About.js","pages/Films.js","pages/Games.js","pages/Tools.js","pages/Work.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","Navbar","expand","style","backgroundColor","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","MySocialMedia","icon","url","iconSize","roundness","size","Helmet","App","exact","path","component","Home","About","Games","Films","Tools","Work","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUAMe,SAASA,EAAOC,GAG7B,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,MAAO,CAAEC,gBAHP,YAIpB,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,OAAnB,UACA,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,KAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,UAEF,kBAACK,EAAA,EAAD,CAAKC,UAAU,+BACb,kBAACE,EAAD,CACEC,KAAK,WACLC,IAAI,wDAEN,kBAACF,EAAD,CAAeC,KAAK,SAASC,IAAI,iCACjC,kBAACF,EAAD,CACEC,KAAK,eACLC,IAAI,6DAEN,kBAACF,EAAD,CAAeC,KAAK,QAAQC,IAAI,kCAChC,kBAACF,EAAD,CACEC,KAAK,WACLC,IAAI,2CAEN,kBAACF,EAAD,CACEC,KAAK,YACLC,IAAI,6CAQhB,SAASF,EAAcd,GACrB,IAAMe,EAAOf,EAAMe,KACbC,EAAMhB,EAAMgB,IAElB,OACE,kBAAC,wBAAD,CACED,KAAMA,EACNE,SAAS,IACTC,UAAU,MACVF,IAAKA,EACLG,KAAK,O,WCtDI,WAASnB,GACtB,OACE,oCACE,kBAACoB,EAAA,EAAD,KACE,6CAEF,qDCNS,WAASpB,GACtB,OACE,oCACE,kBAACoB,EAAA,EAAD,KACE,kDAEF,8CCNS,WAASpB,GACtB,OACE,oCACE,kBAACoB,EAAA,EAAD,KACE,8CAEF,kDCNS,WAASpB,GACtB,OACE,oCACE,kBAACoB,EAAA,EAAD,KACE,8CAEF,kDCNS,WAASpB,GACtB,OACE,oCACE,kBAACoB,EAAA,EAAD,KACE,8CAEF,kDCNS,WAASpB,GACtB,OACE,oCACE,kBAACoB,EAAA,EAAD,KACE,8CAEF,kDCNS,WAASpB,GACtB,OACE,oCACE,kBAACoB,EAAA,EAAD,KACE,6CAEF,iDC0BSC,MArBf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWC,IAEjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWE,IACtC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,SAASC,UAAWG,IACtC,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,SAASC,UAAWI,IACtC,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,SAASC,UAAWK,IACtC,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,QAAQC,UAAWM,IAErC,kBAAC,IAAD,CAAON,UAAWO,QChBRC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCRNC,IAASC,OACP,kBAAC,IAAD,CAAQC,SAAS,KACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e727b958.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { SocialMediaIconsReact } from \"social-media-icons-react\";\n\nimport \"../css/NavBar.css\";\n\nexport default function NavBar(props) {\n  const backgroundColor = \"#e3f2fd\";\n\n  return (\n    <Navbar expand=\"lg\" style={{ backgroundColor: backgroundColor }}>\n      <Navbar.Brand href=\"/#/\">Linder</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/about\">About</Nav.Link>\n          <Nav.Link href=\"/work\">Work</Nav.Link>\n          <Nav.Link href=\"/films\">Films</Nav.Link>\n          <Nav.Link href=\"/tools\">Tools</Nav.Link>\n          <Nav.Link href=\"/games\">Games</Nav.Link>\n        </Nav>\n        <Nav className=\"ml-auto navbar-social-media\">\n          <MySocialMedia\n            icon=\"linkedin\"\n            url=\"https://www.linkedin.com/in/peter-linder-aa648b181/\"\n          />\n          <MySocialMedia icon=\"github\" url=\"http://github.com/peterapps/\" />\n          <MySocialMedia\n            icon=\"youtube-play\"\n            url=\"https://www.youtube.com/channel/UCMZRd32HnEHTn6YHyyjQ8nQ\"\n          />\n          <MySocialMedia icon=\"vimeo\" url=\"https://vimeo.com/peterlinder\" />\n          <MySocialMedia\n            icon=\"facebook\"\n            url=\"https://www.facebook.com/peterlinder66\"\n          />\n          <MySocialMedia\n            icon=\"instagram\"\n            url=\"https://www.instagram.com/grayroof66/\"\n          />\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nfunction MySocialMedia(props) {\n  const icon = props.icon;\n  const url = props.url;\n\n  return (\n    <SocialMediaIconsReact\n      icon={icon}\n      iconSize=\"5\"\n      roundness=\"20%\"\n      url={url}\n      size=\"32\"\n    />\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function(props) {\n  return (\n    <>\n      <Helmet>\n        <title>Home page</title>\n      </Helmet>\n      <p>Hello to my homepage</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function(props) {\n  return (\n    <>\n      <Helmet>\n        <title>Not found page</title>\n      </Helmet>\n      <p>404 not found</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function(props) {\n  return (\n    <>\n      <Helmet>\n        <title>About page</title>\n      </Helmet>\n      <p>Hello to my about</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function(props) {\n  return (\n    <>\n      <Helmet>\n        <title>Films page</title>\n      </Helmet>\n      <p>Hello to my films</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function(props) {\n  return (\n    <>\n      <Helmet>\n        <title>Games page</title>\n      </Helmet>\n      <p>Hello to my games</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function(props) {\n  return (\n    <>\n      <Helmet>\n        <title>Tools page</title>\n      </Helmet>\n      <p>Hello to my tools</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport default function(props) {\n  return (\n    <>\n      <Helmet>\n        <title>Work page</title>\n      </Helmet>\n      <p>Hello to my work</p>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./css/App.css\";\n\nimport NavBar from \"./components/NavBar.js\";\nimport Home from \"./pages/Home.js\";\nimport NotFound from \"./pages/NotFound.js\";\n\nimport About from \"./pages/About.js\";\nimport Films from \"./pages/Films.js\";\nimport Games from \"./pages/Games.js\";\nimport Tools from \"./pages/Tools.js\";\nimport Work from \"./pages/Work.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"Page\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/games\" component={Games} />\n          <Route exact path=\"/films\" component={Films} />\n          <Route exact path=\"/tools\" component={Tools} />\n          <Route exact path=\"/work\" component={Work} />\n\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"jquery\";\n\nReactDOM.render(\n  <Router basename=\"/\">\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}